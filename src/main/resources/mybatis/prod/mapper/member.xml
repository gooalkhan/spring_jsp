<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring_jsp.member.MemberMapper">
    <select id="getAll" resultType="com.example.spring_jsp.member.MemberDTO">
        select * from membertbl;
    </select>

    <update id="save">
        insert into membertbl (ID, PW, EMAIL, NAME, JOINDATE, ADMIN)
        values (#{id}, #{pw}, #{email}, #{name}, #{joinDate}, 'admin');
    </update>

    <update id="createTable">
        CREATE TABLE membertbl (
                                   ID varchar(20) NOT NULL,
                                   PW varchar(100) NOT NULL,
                                   EMAIL varchar(100) NOT NULL,
                                   HASEMAILAUTHED tinyint NOT NULL DEFAULT '0',
                                   NAME varchar(30) NOT NULL,
                                   JOINDATE timestamp NOT NULL,
                                   MODIFYDATE timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                   ENABLEMEMBER tinyint NOT NULL DEFAULT '1',
                                   ADMIN varchar(30) DEFAULT NULL,
                                   PRIMARY KEY (ID)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
    </update>

    <update id="dropTable">
        drop table if exists membertbl;
    </update>
    
    
    
    
    	<!-- 이 위에는 안 건드리고 밑 내용만 건드림 -->
    
    
    
    
    
    <!-- 기본 membertbl select 구문(회원 리스트)-->
	<select id="memberSelect" resultType="com.example.spring_jsp.member.MemberDTO">
		select
		*
		from
		membertbl
	</select>
	
	<!-- 기본 membertbl insert 구문(회원 가입) -->
	<insert id="memberJoin">
		insert
		into
		membertbl
		(ID, PW, EMAIL, NAME, JOINDATE, MODIFYDATE)
		values
		(#{id}, #{pw}, #{email}, #{name}, now(), now())
	</insert>
	
	<!-- 기본 membertbl update 구문(회원 정보 수정) -->
	<!-- 회원탈퇴(비활성화)된 유저는 못함 -->
	<update id="memberUpdate">
		update membertbl set
		PW = #{pw},
		EMAIL = #{email},
		NAME = #{name},
		MODIFYDATE = now()
		where
		ID = #{id}
		and
		NOT ENABLEMEMBER=0;
	</update>
	
	<!-- 기본 membertbl delete 구문(회원 탈퇴) 이제는 탈퇴 시 비활성화로 갈거기 때문에, 일단 흔적으로 남겨둠
	<delete id="memberDelete">
		delete
		from
		membertbl
		where
		ID = #{id}
	</delete>
	 -->
	<!-- 회원 탈퇴(비활성화 방식) -->
	<!-- 이제 탈퇴된 회원을 보고싶지 않다면, where NOT enablemember = 0 이렇게 써줘야됨 -->
	<update id="memberDelete">
		update membertbl set
		ENABLEMEMBER = 0
		where
		ID = #{id}
	</update>
	
	<!-- 회원 상세 정보 -->
	<!-- 회원탈퇴(비활성화)된 유저는 못함 -->
	<select id="memberDetail" resultType="com.example.spring_jsp.member.MemberDTO">
		<![CDATA[
	    select
	    *
	    from
	    membertbl
	    where
	    ID = #{id}
	    and
	    NOT ENABLEMEMBER=0;
	    ]]>
	</select>
	
	<!-- 로그인 -->
	<!-- 회원탈퇴(비활성화)된 유저는 못함 -->
	<select id="memberLogin" resultType="com.example.spring_jsp.member.MemberDTO">
		<![CDATA[
	    select
	    *
	    from
	    membertbl
	    where
	    ID = #{id}
	    and
	    PW = #{pw}
	    and
	    NOT ENABLEMEMBER=0;
	    ]]>
	</select>
		
	<!-- 해당 id가 있는지 확인 -->
	<select id="existsById" resultType="com.example.spring_jsp.member.MemberDTO">
		<![CDATA[
	    select
	    *
	    from
	    membertbl
	    where
	    ID = #{id}
	    ]]>
	</select>
	
	<!-- 해당 이름이 있는지 확인 -->
	<select id="existsByName" resultType="com.example.spring_jsp.member.MemberDTO">
		<![CDATA[
	    select
	    *
	    from
	    membertbl
	    where
	    NAME = #{name}
	    ]]>
	</select>
	
	<!-- 해당 이메일이 있는지 확인 -->
	<select id="existsByEmail" resultType="com.example.spring_jsp.member.MemberDTO">
		<![CDATA[
	    select
	    *
	    from
	    membertbl
	    where
	    Email = #{email}
	    ]]>
	</select>
		
	<!-- 부관리자 임명 -->
	<update id="subadminAppoint" >
		update
		membertbl
		set
		ADMIN = 'subadmin'
		where
		ID = #{id}
	</update>
	
	<!-- 부관리자 박탈 -->
	<update id="subadminAppointCancel" >
		update
		membertbl
		set
		ADMIN = null
		where
		ID = #{id}
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="whereIsMyId" resultType="com.example.spring_jsp.member.MemberDTO">
		select
		*
		from
		membertbl
		where
		email = #{email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="whereIsMyPw" resultType="com.example.spring_jsp.member.MemberDTO">
		select
		*
		from
		membertbl
		where
		id = #{id}
		and
		email = #{email}
	</select>
</mapper>